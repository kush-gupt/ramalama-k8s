name: Build Container Images

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  # IMAGE_OWNER will default to github.repository_owner (lowercased).
  # Example: if repo is MyOrg/my-repo, images will be ghcr.io/myorg/centos-ramalama-min
  # Override IMAGE_OWNER if you want to push to a different org or user account.
  # e.g., IMAGE_OWNER: your-quay-username

  BASE_IMAGE_NAME_SUFFIX: centos-ramalama-min
  APP_IMAGE_QWEN_4B_NAME_SUFFIX: qwen-4b-ramalama
  APP_IMAGE_QWEN_30B_NAME_SUFFIX: qwen-30b-ramalama

jobs:
  determine-image-owner:
    name: Determine Image Owner
    runs-on: ubuntu-latest
    outputs:
      owner: ${{ steps.get_owner.outputs.OWNER }}
      registry_owner_path: ${{ steps.get_owner.outputs.REGISTRY_OWNER_PATH }}
    steps:
      - name: Get and lowercase repository owner
        id: get_owner
        run: |
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          echo "OWNER=$OWNER" >> $GITHUB_OUTPUT
          echo "REGISTRY_OWNER_PATH=${{ env.REGISTRY }}/$OWNER" >> $GITHUB_OUTPUT

  build-base-image:
    name: Build Base Image (centos-ramalama-min)
    runs-on: ubuntu-latest
    needs: determine-image-owner
    permissions:
      contents: read
      packages: write # Required to publish images to GitHub Packages

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Upgrade to Podman 5
        run: |
          # Enable universe repository which contains podman
          sudo add-apt-repository "deb http://archive.ubuntu.com/ubuntu oracular universe"
          # Update package lists
          sudo apt-get update
          sudo apt-get purge firefox
          # Install specific podman version
          sudo apt-get upgrade

      - name: Print Disk Space
        shell: bash
        run: |
          df -h

      - name: Free Disk Space
        shell: bash
        run: |
          sudo docker rmi "$(docker image ls -aq)" >/dev/null 2>&1 || true
          sudo rm -rf \
            /usr/share/dotnet /usr/local/lib/android /opt/ghc \
            /usr/local/share/powershell /usr/share/swift /usr/local/.ghcup \
            /usr/share/dotnet /usr/lib/jvm /opt/hostedtoolcache/CodeQL \
            "$AGENT_TOOLSDIRECTORY" || true
          sudo swapoff -a
          sudo rm -f /mnt/Swapfile

      # /mnt has ~ 65 GB free disk space. / is too small.
      - name: Reconfigure data-root
        run: |
          sudo mkdir -p /mnt/docker /etc/docker
          echo '{"data-root": "/mnt/docker"}' > /tmp/daemon.json
          sudo mv /tmp/daemon.json /etc/docker/daemon.json
          cat /etc/docker/daemon.json
          sudo systemctl restart docker.service
          df -h

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | podman login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin

      - name: Define Image Tags
        id: image_tags
        run: |
          OWNER_PATH="${{ needs.determine-image-owner.outputs.registry_owner_path }}"
          IMAGE_BASENAME="${{ env.BASE_IMAGE_NAME_SUFFIX }}"
          TAG_LATEST="${OWNER_PATH}/${IMAGE_BASENAME}:latest"
          TAG_SHA="${OWNER_PATH}/${IMAGE_BASENAME}:${{ github.sha }}"
          echo "TAG_LATEST=${TAG_LATEST}" >> $GITHUB_OUTPUT
          echo "TAG_SHA=${TAG_SHA}" >> $GITHUB_OUTPUT
          echo "All tags to build: ${TAG_LATEST}, ${TAG_SHA}"

      - name: Build base image
        run: |
          podman --storage-driver overlay build --squash-all \
            --format=oci \
            --tag ${{ steps.image_tags.outputs.TAG_LATEST }} \
            --tag ${{ steps.image_tags.outputs.TAG_SHA }} \
            -f ./containerfiles/Containerfile-min \
            .

      - name: Push base image
        run: |
          podman --storage-driver overlay push ${{ steps.image_tags.outputs.TAG_LATEST }}
          podman --storage-driver overlay push ${{ steps.image_tags.outputs.TAG_SHA }}

  build-app-image-qwen-4b:
    name: Build App Image (Qwen 4B)
    runs-on: ubuntu-latest
    needs: [determine-image-owner, build-base-image]
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Upgrade to Podman 5
        run: |
          # Enable universe repository which contains podman
          sudo add-apt-repository "deb http://archive.ubuntu.com/ubuntu oracular universe"
          # Update package lists
          sudo apt-get update
          sudo apt-get purge firefox
          # Install specific podman version
          sudo apt-get upgrade

      - name: Print Disk Space
        shell: bash
        run: |
          df -h

      - name: Free Disk Space
        shell: bash
        run: |
          sudo docker rmi "$(docker image ls -aq)" >/dev/null 2>&1 || true
          sudo rm -rf \
            /usr/share/dotnet /usr/local/lib/android /opt/ghc \
            /usr/local/share/powershell /usr/share/swift /usr/local/.ghcup \
            /usr/share/dotnet /usr/lib/jvm /opt/hostedtoolcache/CodeQL \
            "$AGENT_TOOLSDIRECTORY" || true
          sudo swapoff -a
          sudo rm -f /mnt/Swapfile

      # /mnt has ~ 65 GB free disk space. / is too small.
      - name: Reconfigure data-root
        run: |
          sudo mkdir -p /mnt/docker /etc/docker
          echo '{"data-root": "/mnt/docker"}' > /tmp/daemon.json
          sudo mv /tmp/daemon.json /etc/docker/daemon.json
          cat /etc/docker/daemon.json
          sudo systemctl restart docker.service
          df -h

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | podman login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin

      - name: Define Image Tags and Build Args
        id: image_details
        run: |
          OWNER_PATH="${{ needs.determine-image-owner.outputs.registry_owner_path }}"
          BASE_IMAGE_LATEST="${OWNER_PATH}/${{ env.BASE_IMAGE_NAME_SUFFIX }}:latest"
          APP_IMAGE_BASENAME="${{ env.APP_IMAGE_QWEN_4B_NAME_SUFFIX }}"
          TAG_LATEST="${OWNER_PATH}/${APP_IMAGE_BASENAME}:latest"
          TAG_SHA="${OWNER_PATH}/${APP_IMAGE_BASENAME}:${{ github.sha }}"
          echo "BASE_IMAGE_ARG=${BASE_IMAGE_LATEST}" >> $GITHUB_OUTPUT
          echo "TAG_LATEST=${TAG_LATEST}" >> $GITHUB_OUTPUT
          echo "TAG_SHA=${TAG_SHA}" >> $GITHUB_OUTPUT
          echo "All tags to build: ${TAG_LATEST}, ${TAG_SHA}"
          echo "Base image for build-arg: ${BASE_IMAGE_LATEST}"

      - name: Build Qwen 4B app image
        run: |
          sudo podman --storage-driver overlay --root='/mnt/docker' build \
            --format=oci \
            --build-arg BASE_IMAGE_NAME=${{ steps.image_details.outputs.BASE_IMAGE_ARG }} \
            --build-arg MODEL_SOURCE_NAME=quay.io/kugupta/qwen3-4b:latest \
            --tag ${{ steps.image_details.outputs.TAG_LATEST }} \
            --tag ${{ steps.image_details.outputs.TAG_SHA }} \
            -f ./containerfiles/Containerfile-qwen-4b \
            .

      - name: Push Qwen 4B app image
        run: |
          sudo podman --storage-driver overlay --root='/mnt/docker' push ${{ steps.image_details.outputs.TAG_LATEST }}
          sudo podman --storage-driver overlay --root='/mnt/docker' push ${{ steps.image_details.outputs.TAG_SHA }}

  build-app-image-qwen-30b:
    name: Build App Image (Qwen 30B)
    runs-on: ubuntu-latest
    needs: [determine-image-owner, build-base-image]
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Upgrade to Podman 5
        run: |
          # Enable universe repository which contains podman
          sudo add-apt-repository "deb http://archive.ubuntu.com/ubuntu oracular universe"
          # Update package lists
          sudo apt-get update
          sudo apt-get purge firefox
          # Install specific podman version
          sudo apt-get upgrade

      - name: Print Disk Space
        shell: bash
        run: |
          df -h

      - name: Free Disk Space
        shell: bash
        run: |
          sudo docker rmi "$(docker image ls -aq)" >/dev/null 2>&1 || true
          sudo rm -rf \
            /usr/share/dotnet /usr/local/lib/android /opt/ghc \
            /usr/local/share/powershell /usr/share/swift /usr/local/.ghcup \
            /usr/share/dotnet /usr/lib/jvm /opt/hostedtoolcache/CodeQL \
            "$AGENT_TOOLSDIRECTORY" || true
          sudo swapoff -a
          sudo rm -f /mnt/Swapfile

      # /mnt has ~ 65 GB free disk space. / is too small.
      - name: Reconfigure data-root
        run: |
          sudo mkdir -p /mnt/docker /etc/docker
          echo '{"data-root": "/mnt/docker"}' > /tmp/daemon.json
          sudo mv /tmp/daemon.json /etc/docker/daemon.json
          cat /etc/docker/daemon.json
          sudo systemctl restart docker.service
          df -h

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | podman login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin

      - name: Define Image Tags and Build Args
        id: image_details
        run: |
          OWNER_PATH="${{ needs.determine-image-owner.outputs.registry_owner_path }}"
          BASE_IMAGE_LATEST="${OWNER_PATH}/${{ env.BASE_IMAGE_NAME_SUFFIX }}:latest" # This will be the image built by build-base-image job
          APP_IMAGE_BASENAME="${{ env.APP_IMAGE_QWEN_30B_NAME_SUFFIX }}"
          TAG_LATEST="${OWNER_PATH}/${APP_IMAGE_BASENAME}:latest"
          TAG_SHA="${OWNER_PATH}/${APP_IMAGE_BASENAME}:${{ github.sha }}"
          echo "BASE_IMAGE_ARG=${BASE_IMAGE_LATEST}" >> $GITHUB_OUTPUT
          echo "TAG_LATEST=${TAG_LATEST}" >> $GITHUB_OUTPUT
          echo "TAG_SHA=${TAG_SHA}" >> $GITHUB_OUTPUT
          echo "All tags to build: ${TAG_LATEST}, ${TAG_SHA}"
          echo "Base image for build-arg: ${BASE_IMAGE_LATEST}"

      - name: Build Qwen 30B app image
        run: |
          sudo podman --storage-driver overlay --root='/mnt/docker' build --squash-all \
            --format=oci \
            --build-arg BASE_IMAGE_NAME=${{ steps.image_details.outputs.BASE_IMAGE_ARG }} \
            --build-arg MODEL_SOURCE_NAME=quay.io/kugupta/qwen3-30b:latest \
            --tag ${{ steps.image_details.outputs.TAG_LATEST }} \
            --tag ${{ steps.image_details.outputs.TAG_SHA }} \
            -f ./containerfiles/Containerfile-qwen-30b \
            .

      - name: Push Qwen 30B app image
        run: |
          sudo podman --storage-driver overlay --root='/mnt/docker' push ${{ steps.image_details.outputs.TAG_LATEST }}
          sudo podman --storage-driver overlay --root='/mnt/docker' push ${{ steps.image_details.outputs.TAG_SHA }}
